########################################
# Name: Gabriella Weis
# Collaborators (if any): Shouvik
# GenAI Transcript (if any):
# Estimated time spent (hr): 3
# Description of any added extensions:
########################################

from WordleGraphics import *  # WordleGWindow, N_ROWS, N_COLS, CORRECT_COLOR, PRESENT_COLOR, MISSING_COLOR, UNKNOWN_COLOR
from english import * # ENGLISH_WORDS, is_english_word
import random

def wordle():
    #answer = random_five_letter()
    # The main function to play the Wordle game.

    def enter_action():
        # What should happen when RETURN/ENTER is pressed.
        row = gw.get_current_row()
        print(row)
        check_answer(row, answer)
        gw.set_current_row(row + 1)
        
    
    def word_from_row(row:int) -> str:
        user_word = ""
        gw.get_current_row()
        for i in range(N_COLS):
            user_word += gw.get_square_letter(row,i)
        return(user_word)

    gw = WordleGWindow()
    gw.add_enter_listener(enter_action)

    def check_answer(row, answer):
        remaining_letters = list(answer)
        guess = word_from_row(row).lower()
        if is_english_word(guess):
            guess_list = list(guess)
        else: 
            gw.show_message("Not in word list.")
    
        # green
        for i in range(N_COLS):
            if guess[i] == answer[i]:
                gw.set_square_color(row, i, CORRECT_COLOR)
                remaining_letters[i] = None

        # yellow + grey
        for i in range(N_COLS):
            if guess[i] == answer[i]:
                continue
            elif guess[i] in remaining_letters:
                gw.set_square_color(row, i, PRESENT_COLOR)
                remaining_letters[i] = None
            else:
                gw.set_square_color(row, i, MISSING_COLOR)

    def random_five_letter():
        five_letters = []
        for word in ENGLISH_WORDS:
            if len(word) == 5:
                five_letters.append(word)
        answer = random.choice(five_letters)
        return answer
    answer = random_five_letter()


# Startup boilerplate
if __name__ == "__main__":
    wordle()
